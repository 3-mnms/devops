apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bookingredis.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "bookingredis.appName" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: {{ include "bookingredis.serviceName" . }}
  replicas: {{ default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "bookingredis.appName" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "bookingredis.appName" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: redis
          {{- $image := .Values.image | default (dict) }}
          image: "{{ $image.repository | default "redis" }}:{{ $image.tag | default "7.2.4" }}"
          imagePullPolicy: {{ $image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            {{- $p := .Values.persistence | default (dict) }}
            storage: {{ $p.size | default "8Gi" }}
        {{- if $p.storageClass }}
        storageClassName: {{ $p.storageClass | quote }}
        {{- end }}